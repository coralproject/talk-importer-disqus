#!/usr/bin/env node

/**
 * Module dependencies.
 */

const program = require('./commander');

const Strategy = require('./services/strategy');
const Sponge = require('./services/sponge');

const TalkService = require('./services/talk-service');
const mongoose = require('./services/talk/services/mongoose');

const Disqus = require('./services/disqus');

const util = require('./util');
const fs = require('fs');

// Register the shutdown criteria.
util.onshutdown([
  () => mongoose.disconnect()
]);

/**
* Import comments into the database.
*/
function importComments(file) {
 
  // Get strategy the strategy use.
  const strategy = new Strategy(file);

  // Get the transformation tool going.
  const sponge = new Sponge(strategy.data);
  
  console.info('Importing comments for %s.', strategy.data.name);

  // // Connect to talk.
  const talk = new TalkService();

  // Connect to disqus.  
  const disqus = new Disqus(strategy.data.service);
  disqus.get_comments(strategy.data.service.forum)
  .then(posts => {
    for (i in posts.response) {
      post = posts.response[i]

      sponge.translate(post, 'comments')
      .then((comment) => {
        console.log('Success', comment.id);
        util.shutdown();
      })
      .catch((error) => {
        console.log('Error translating or importing a comment. ', error);
        util.shutdown(1);
      });
    }
  })
  .catch(error => {
    console.log('Error getting comments from Disqus. ', error);
    util.shutdown(1);
  });
}

//==============================================================================
// Setting up the program command line arguments.
//==============================================================================

program
  .command('import <file>')
  .description('import comments into database via strategy file')
  .action(importComments);

program.parse(process.argv);

// If there is no command listed, output help.
if (!process.argv.slice(2).length) {
  program.outputHelp();
  util.shutdown();
}
